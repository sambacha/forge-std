name: CI


on:
  workflow_dispatch: {}
  pull_request:
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
     # These values match the names of test groups that will be run
        test-group:
          [
            0.8.0,
            0.7.6,
            0.7.0,
            0.6.12,
            0.6.2,
          ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Print forge version
        run: forge --version

      # Backwards compatibility checks:
      # - the oldest and newest version of each supported minor version
      # - versions with specific issues
      - name: Check compatibility with latest
        if: always()
        run: |
          output=$(forge build --skip test)

          if echo "$output" | grep -q "Warning"; then
            echo "$output"  >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Check compatibility with 0.8.0
        id: v0_8_0
        if: always()
        run: |
          output=$(forge build --skip test --use solc:0.8.0)

          if echo "$output" | grep -q "Warning"; then
            echo "$output"  >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Check compatibility with 0.7.6
        id: v0_7_6
        if: always()
        run: |
          output=$(forge build --skip test --use solc:0.7.6)

          if echo "$output" | grep -q "Warning"; then
            echo "$output"  >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Check compatibility with 0.7.0
        id: v0_7_0
        if: always()
        run: |
          output=$(forge build --skip test --use solc:0.7.0)

          if echo "$output" | grep -q "Warning"; then
            echo "$output"  >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Check compatibility with 0.6.12
        id: v0_6_12
        if: always()
        run: |
          output=$(forge build --skip test --use solc:0.6.12)

          if echo "$output" | grep -q "Warning"; then
            echo "$output"  >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Check compatibility with 0.6.2
        id: v0_6_2
        if: always()
        run: |
          output=$(forge build --skip test --use solc:0.6.2)

          if echo "${output}" | grep -q "Warning"; then
              echo "${output}"  >> "$GITHUB_OUTPUT"
              exit 1
          fi

      - name: Check compatibility with ${{ matrix.test-group }}
        id: ${{ matrix.test-group }}
        if: always()
        run: |
          output=$(forge build --skip test --use solc:/${{ matrix.test-group }}/)

          if echo "${output}" | grep -q "Warning"; then
              echo "${output}"  >> "$GITHUB_OUTPUT"
              exit 1
          fi

      - name: Pass or fail
        run: |
          if [[ ${{ steps.generate_number.outputs.random_number }} == 0 ]]; then exit 0; else exit 1; fi

      # via-ir compilation time checks.
      - name: Measure compilation time of Test with 0.8.17 --via-ir
        if: always()
        run: forge build --skip test --contracts test/compilation/CompilationTest.sol --use solc:0.8.17 --via-ir

      - name: Measure compilation time of TestBase with 0.8.17 --via-ir
        if: always()
        run: forge build --skip test --contracts test/compilation/CompilationTestBase.sol --use solc:0.8.17 --via-ir

      - name: Measure compilation time of Script with 0.8.17 --via-ir
        if: always()
        run: forge build --skip test --contracts test/compilation/CompilationScript.sol --use solc:0.8.17 --via-ir

      - name: Measure compilation time of ScriptBase with 0.8.17 --via-ir
        if: always()
        run: forge build --skip test --contracts test/compilation/CompilationScriptBase.sol --use solc:0.8.17 --via-ir

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Print forge version
        run: forge --version

      - name: Run tests
        run: forge test -vvv

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Print forge version
        run: forge --version

      - name: Check formatting
        run: forge fmt --check
